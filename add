#!/usr/bin/env sh

# Check if feature name is provided
if [ -z "$1" ]; then
    echo "Usage: $0 -f <feature>"
    exit 1
fi

# Parse command line arguments
while getopts "f:" opt; do
    case $opt in
        f)
            FEATURE=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

if [ -z "$FEATURE" ]; then
    echo "Feature name is required. Usage: $0 -f <feature>"
    exit 1
fi

# Check if feature directory exists
if [ ! -d "$(dirname "$0")/features/$FEATURE" ]; then
    echo "Feature '$FEATURE' not found in features directory"
    exit 1
fi

# Copy feature to devcontainer/features
echo "Adding feature: $FEATURE"
mkdir -p ".devcontainer/features"
if [ -e .devcontainer/features/features.sh ]; then echo "features.sh found"; else cp "$(dirname "$0")/features/features.sh" ".devcontainer/features/features.sh"; fi;
cp -r "$(dirname "$0")/features/$FEATURE" ".devcontainer/features/$FEATURE"

# Add install.sh call to features.sh
echo "Adding feature installation to features.sh"
echo "bash /workspace/.devcontainer/features/$FEATURE/install.sh" >> ".devcontainer/features/features.sh"

# Update activate script to include feature's compose.yaml if it exists
if [ -f ".devcontainer/features/$FEATURE/compose.yaml" ]; then
    echo "Adding feature compose.yaml to activate script"
    # Create a backup of the original activate script
    cp ".devcontainer/activate" ".devcontainer/activate.backup"
    
    # Create a new activate script that includes the feature's compose.yaml
    cat > ".devcontainer/activate" << 'EOF'
#!/usr/bin/env sh
docker compose -f ./.devcontainer/compose.yaml \
EOF
    
    # Add all feature compose.yaml files
    for feature_dir in .devcontainer/features/*/; do
        if [ -f "${feature_dir}compose.yaml" ]; then
            feature_name=$(basename "$feature_dir")
            echo "    -f ./.devcontainer/features/${feature_name}/compose.yaml \\" >> ".devcontainer/activate"
        fi
    done
    
    # Add the rest of the original activate script
    cat >> ".devcontainer/activate" << 'EOF'
    up -d --build --remove-orphans && \
export $(cat .devcontainer/.env) && \
docker exec -it $COMPOSE_PROJECT_NAME bash
EOF
    
    # Remove the backup
    rm ".devcontainer/activate.backup"
fi

echo "Feature '$FEATURE' added successfully"
